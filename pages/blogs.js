import React, { useEffect, useState } from 'react'

import Head from 'next/head'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'

import InfiniteScroll from 'react-infinite-scroll-component';
import Blog from '@/src/blog';
import {useDispatch , useSelector} from 'react-redux';

import {getBlogs} from "@/src/actions/blogActions";
import { useAlert } from 'react-alert';
import { CLEAR_ERRORS } from '@/src/constants/blogConstants';

const inter = Inter({ subsets: ['latin'] })

export default function Blogs(){
  const [items,setItems] = useState([]);
  const [blogsCount,setBlogsCount] = useState(0);
  const [count , setCount] = useState(0);
  const dispatch = useDispatch();
  const alertObj = useAlert();
  useEffect(()=>{
    fetchMoreData();
  },[])
  const {error , loading , blogs} = useSelector((state) => state.blogs);
  if(error){
    alertObj.error(error);
    dispatch({type:CLEAR_ERRORS});
  }
  const fetchMoreData = async () => {
    await dispatch(getBlogs());
    setItems(blogs.slice(0,count+5));
    setCount((prev)=>{return prev+5});
    setBlogsCount(blogs.length);
  };
  return (
    <>
        <Head>
        <title>Blogs</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.main} ${inter.className}`}>
        <div style={{display:"flex",flexDirection:"column"}}>
          <h1 style={{alignSelf:"center"}} className='text-8xl font-semibold font-mono mb-[50px]'>Blogs</h1>
          <InfiniteScroll style={{overflow:'unset'}}
                  dataLength={items.length}
                  next={fetchMoreData}
                  hasMore={count<blogsCount}
                  loader={<h4>Loading...</h4>}
                  endMessage={
                    <p style={{ textAlign: 'center' }} className='mt-[20px]'>
                      <b className='font-mono'>{blogsCount == 0 ? "No Blogs right now :( " : "Yay! You have seen it all"}</b>
                    </p>
                  }>
                  {items.map((i, index) => (
                    <Blog i={i} key={index}/>
                  ))}
          </InfiniteScroll>
        </div>
      </main>
    </>
  )
}
